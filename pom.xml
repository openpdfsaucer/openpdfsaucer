<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.openpdfsaucer</groupId>
  <artifactId>openpdfsaucer-parent</artifactId>
  <version>2.0.7-SNAPSHOT</version>
  <packaging>pom</packaging>

  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Maven Central</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>

  <!-- please run mvn tidy:pom once in a while -->
  <name>OpenPDFSaucer - Free and Open PDF saucer toolkit library</name>
  <description>Open and Free PDF saucer toolkit library for reading, editing and rendering PDF files.</description>
  <url>https://github.com/openpdfsaucer</url>

  <licenses>
    <license>
      <name>GNU Lesser General Public License (LGPL), Version 2.1</name>
      <url>https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>The OpenPDFSaucer Project</name>
      <organizationUrl>https://github.com/openpdfsaucer</organizationUrl>
    </developer>
    <developer>
      <organizationUrl>https://github.com/openpdfsaucer</organizationUrl>
    </developer>
  </developers>

  <scm>
    <url>scm:git:https://github.com/openpdfsaucer/openpdfsaucer</url>
    <connection>scm:git:https://github.com/openpdfsaucer/openpdfsaucer.git</connection>
    <developerConnection>scm:git:https://github.com/openpdfsaucer/openpdfsaucer.git</developerConnection>
  </scm>

  <modules>
    <module>openpdf</module>
    <module>openpdf-fonts-extra</module>
    <module>flying-saucer-core</module>
    <module>flying-saucer-pdf</module>
    <module>PDFrenderer</module>
    <module>pdf-toolbox</module>
    <!-- Next time you publish - please try to uncomment the browser (we had to comment it to be able to publish the first time) -->
    <!--<module>flying-saucer-browser</module>-->
  </modules>
  <!-- Distribution config from http://central.sonatype.org/pages/apache-maven.html#distribution-management-and-authentication -->
<!--  <distributionManagement>-->
<!--    <repository>-->
<!--      <id>github</id>-->
<!--      <name>GitHub OWNER Apache Maven Packages</name>-->
<!--      <url>https://maven.pkg.github.com/openpdfsaucer/openpdfsaucer</url>-->
<!--    </repository>-->
<!--  </distributionManagement>-->


  <properties>
    <java-module-name>io.github.openpdfsaucer.openpdfsaucer.parent</java-module-name>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Maven Plugins versions -->
    <maven-bundle-plugin.version>6.0.0</maven-bundle-plugin.version>
    <maven-checkstyle-plugin.version>3.4.0</maven-checkstyle-plugin.version>
    <maven-clean-plugin.version>3.4.1</maven-clean-plugin.version>
    <maven.compiler.plugin.version>3.14.0</maven.compiler.plugin.version>
    <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>
    <maven-jxr-plugin.version>3.6.0</maven-jxr-plugin.version>
    <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
    <maven-repository-plugin.version>2.4</maven-repository-plugin.version>
    <maven-site-plugin.version>3.21.0</maven-site-plugin.version>
    <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
    <maven.test.failure.ignore>false</maven.test.failure.ignore>
    <nexus-staging-maven-plugin.version>1.7.0</nexus-staging-maven-plugin.version>
    <pitest-junit5-plugin.version>1.2.2</pitest-junit5-plugin.version>
    <pitmp-maven-plugin.version>1.3.7</pitmp-maven-plugin.version>
    <org-sonatype-central-plugin.version>0.7.0</org-sonatype-central-plugin.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.version>5.12.1</junit.version>
    <slf4j.version>2.0.17</slf4j.version>
    <assertj.version>3.27.3</assertj.version>
    <pdftest.version>1.9.2</pdftest.version>
    <error_prone.version>2.37.0</error_prone.version>

    <bouncycastle.version>1.80</bouncycastle.version>
    <commons-io.version>2.18.0</commons-io.version>
    <dom4j.version>2.1.4</dom4j.version>
    <fop.version>2.10</fop.version>
    <jakarta.servlet-api.version>6.1.0</jakarta.servlet-api.version>
    <jcommon.version>1.0.24</jcommon.version>
    <jfreechart.version>1.5.5</jfreechart.version>

    <!-- test-dependencies -->
    <checkstyle.version>10.17.0</checkstyle.version>
    <hamcrest.version>3.0</hamcrest.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <junit.version>5.12.1</junit.version>
    <mockito4.version>4.11.0</mockito4.version>
    <mockito5.version>5.16.1</mockito5.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk18on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk18on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>fop</artifactId>
        <version>${fop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jfree</groupId>
        <artifactId>jfreechart</artifactId>
        <version>${jfreechart.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jfree</groupId>
        <artifactId>jcommon</artifactId>
        <version>${jcommon.version}</version>
      </dependency>
      <dependency>
        <groupId>org.dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>${dom4j.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>${jakarta.servlet-api.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.codeborne</groupId>
        <artifactId>pdf-test</artifactId>
        <version>${pdftest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
      <version>${error_prone.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jspecify</groupId>
      <artifactId>jspecify</artifactId>
      <version>1.0.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Common test dependencies -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Clean also test results -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>./out</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>./test</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>./target</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>.</directory>
              <includes>
                <include>*.rtf</include>
                <include>*.pdf</include>
                <include>*.html</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- Set java version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>${java.version}</release>
          <compilerArgs>
            <arg>-Xlint:unchecked</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <!-- Use the Bnd generated MANIFEST.MF in the jar -->
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
            <manifestEntries>
              <Automatic-Module-Name>${java-module-name}</Automatic-Module-Name>
              <Multi-Release>true</Multi-Release>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-repository-plugin</artifactId>
        <version>${maven-repository-plugin.version}</version>
      </plugin>
      <!--<plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus-staging-maven-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>false</autoReleaseAfterClose>
        </configuration>
      </plugin>-->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <!-- bind the manifest.mf generation after the 'compile' phase -->
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- unpack bundle, so humans can see the manifest without unpacking the jar -->
          <unpackBundle>true</unpackBundle>
        </configuration>
      </plugin>
      <plugin>
        <groupId>eu.stamp-project</groupId>
        <artifactId>pitmp-maven-plugin</artifactId>
        <version>${pitmp-maven-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>${pitest-junit5-plugin.version}</version>
          </dependency>
          <!--Need this because dep is optional and pitest can't find classes-->
          <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <avoidCallsTo>
            <avoidCallsTo>java.util.logging</avoidCallsTo>
            <avoidCallsTo>org.apache.log4j</avoidCallsTo>
            <avoidCallsTo>org.slf4j</avoidCallsTo>
            <avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
          </avoidCallsTo>
          <historyInputFile>${project.build.directory}/pitest</historyInputFile>
          <historyOutputFile>${project.build.directory}/pitest</historyOutputFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>jdk17-plus</id>
      <activation>
        <jdk>[17,)</jdk>
      </activation>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito5.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.plugin.version}</version>
            <configuration>
              <release>${java.version}</release>
            </configuration>
            <executions>
              <execution>
                <id>compile-java-17</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <release>17</release>
                  <compileSourceRoots>
                    <compileSourceRoot>${project.basedir}/src/main/java</compileSourceRoot>
                  </compileSourceRoots>
                  <multiReleaseOutput>true</multiReleaseOutput>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.central</groupId>
            <artifactId>central-publishing-maven-plugin</artifactId>
            <version>${org-sonatype-central-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <publishingServerId>central</publishingServerId>
              <tokenAuth>true</tokenAuth>
              <autoPublish>true</autoPublish>
            </configuration>
          </plugin>

          <!-- Create javadoc for help -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <configuration>
              <source>${java.version}</source>
              <!-- Add these lines -->
              <detectJavaApiLink>false</detectJavaApiLink>
              <doclint>none</doclint>
              <quiet>true</quiet>
              <!-- This is important - tells javadoc to only use compiled classes -->
              <includeDependencySources>false</includeDependencySources>
              <!-- Prevent Maven from trying to download your own artifacts -->
              <detectOfflineLinks>false</detectOfflineLinks>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <additionalJOptions>-Xdoclint:none</additionalJOptions>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Create sources for better debugging and context assist -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <phase>verify</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- GPG signing config -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
          </plugin>
        </plugins>

      </build>
    </profile>
  </profiles>
</project>
